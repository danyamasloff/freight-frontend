// freight-frontend/src/features/routes/types/index.ts

export interface RoutePoint {
    lat: number
    lon: number
    address?: string
    type: 'start' | 'waypoint' | 'end'
    order: number
}

export interface RouteOptimizationOptions {
    optimizeOrder: boolean
    considerTraffic: boolean
    preferHighways: boolean
    avoidTolls: boolean
    vehicleRestrictions: boolean
}

export interface RouteAnalysis {
    distance: number
    duration: number
    fuelConsumption: number
    estimatedCost: number
    riskScore: number
    weatherRisk: number
    trafficRisk: number
    riskFactors: string[]
    recommendations: string[]
}

export interface RoutePlanningRequest {
    startLat: number
    startLon: number
    endLat: number
    endLon: number
    vehicleId?: number
    driverId?: number
    cargoId?: number
    departureTime?: string
    considerWeather?: boolean
    considerTraffic?: boolean
}

export interface RouteWaypoint {
    lat: number
    lon: number
    address?: string
    stopType?: 'fuel' | 'rest' | 'delivery' | 'pickup'
    duration?: number
}

export interface DetailedRouteResponse {
    id?: string
    startPoint: string
    endPoint: string
    distance: number
    duration: number
    fuelConsumption: number
    fuelCost: number
    tollCost: number
    estimatedDriverCost: number
    totalCost: number
    overallRiskScore: number
    weatherRisk: number
    roadQualityRisk: number
    trafficRisk: number
    cargoRisk?: number
    coordinates: Array<[number, number]>
    weatherForecast?: WeatherForecast[]
    alerts?: RouteAlert[]
    estimatedFuelCost?: number
}

export interface WeatherForecast {
    location: string
    time: string
    temperature: number
    description: string
    windSpeed: number
    humidity: number
    visibility: number
    precipitation: number
    conditions: string
}

export interface RouteAlert {
    type: 'weather' | 'traffic' | 'road' | 'vehicle' | 'compliance'
    severity: 'low' | 'medium' | 'high' | 'critical'
    message: string
    location?: RoutePoint
    timestamp?: string
}

export interface RouteFormData {
    startAddress: string
    endAddress: string
    startLat?: number
    startLon?: number
    endLat?: number
    endLon?: number
    vehicleId?: string
    driverId?: string
    departureTime?: string
}

// Status display configuration
export const ROUTE_STATUS_CONFIG = {
    PLANNED: {
        label: '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è',
        variant: 'outline' as const,
        icon: 'üìã',
        color: 'bg-blue-500',
        textColor: 'text-blue-700',
        bgColor: 'bg-blue-50'
    },
    IN_PROGRESS: {
        label: '–í –ø—É—Ç–∏',
        variant: 'default' as const,
        icon: 'üöõ',
        color: 'bg-green-500',
        textColor: 'text-green-700',
        bgColor: 'bg-green-50'
    },
    COMPLETED: {
        label: '–ó–∞–≤–µ—Ä—à–µ–Ω',
        variant: 'secondary' as const,
        icon: '‚úÖ',
        color: 'bg-gray-500',
        textColor: 'text-gray-700',
        bgColor: 'bg-gray-50'
    },
    CANCELLED: {
        label: '–û—Ç–º–µ–Ω–µ–Ω',
        variant: 'destructive' as const,
        icon: '‚ùå',
        color: 'bg-red-500',
        textColor: 'text-red-700',
        bgColor: 'bg-red-50'
    },
} as const

export const VEHICLE_TYPES = [
    { value: 'truck', label: '–ì—Ä—É–∑–æ–≤–∏–∫' },
    { value: 'van', label: '–§—É—Ä–≥–æ–Ω' },
    { value: 'car', label: '–õ–µ–≥–∫–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å' },
    { value: 'motorcycle', label: '–ú–æ—Ç–æ—Ü–∏–∫–ª' },
] as const

export const OPTIMIZATION_STRATEGIES = [
    { value: 'fastest', label: '–ë—ã—Å—Ç—Ä–µ–π—à–∏–π –º–∞—Ä—à—Ä—É—Ç' },
    { value: 'shortest', label: '–ö—Ä–∞—Ç—á–∞–π—à–∏–π –º–∞—Ä—à—Ä—É—Ç' },
    { value: 'balanced', label: '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π' },
    { value: 'economical', label: '–≠–∫–æ–Ω–æ–º–∏—á–Ω—ã–π' },
] as const

export { RouteCalculationResult } from './components/route-calculation-result'

// –°—Ç—Ä–∞–Ω–∏—Ü—ã (–ø—É–±–ª–∏—á–Ω—ã–π API)
export { default as RoutesPage } from './pages/routes-page';
export { default as RouteDetailPage } from './pages/route-detail-page';
export { default as CreateRoutePage } from './pages/create-route-page';
export { default as RoutePlannerPage } from './pages/route-planner-page';
export { default as RouteMapPage } from './pages/route-map-page';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
// export { RoutePlanner } from './components/route-planner';
// export { RouteForm } from './components/route-form';